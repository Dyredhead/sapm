#compdef sapm

autoload -U is-at-least

_sapm() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" : \
'--package-manager=[Use the specified package manager instead of the default]:PACKAGE_MANAGER: ' \
'--pm=[Use the specified package manager instead of the default]:PACKAGE_MANAGER: ' \
'-v[Show the command that SAPM will execute]' \
'--verbose[Show the command that SAPM will execute]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
":: :_sapm_commands" \
"*::: :->sapm" \
&& ret=0
    case $state in
    (sapm)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:sapm-command-$line[1]:"
        case $line[1] in
            (info)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
':package:' \
&& ret=0
;;
(show)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
':package:' \
&& ret=0
;;
(install)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
'*::packages:' \
&& ret=0
;;
(add)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
'*::packages:' \
&& ret=0
;;
(list)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(ls)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(search)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
':package:' \
&& ret=0
;;
(find)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
':package:' \
&& ret=0
;;
(uninstall)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
'*::packages:' \
&& ret=0
;;
(remove)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
'*::packages:' \
&& ret=0
;;
(update)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(upgrade)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_sapm__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:sapm-help-command-$line[1]:"
        case $line[1] in
            (info)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(install)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(list)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(search)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(uninstall)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(update)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
}

(( $+functions[_sapm_commands] )) ||
_sapm_commands() {
    local commands; commands=(
'info:Get information about the specified package' \
'show:Get information about the specified package' \
'install:Install the specified package(s)' \
'add:Install the specified package(s)' \
'list:List all of the installed packages' \
'ls:List all of the installed packages' \
'search:Search for the specified package' \
'find:Search for the specified package' \
'uninstall:Uninstall the specified package(s)' \
'remove:Uninstall the specified package(s)' \
'update:Update all packages' \
'upgrade:Update all packages' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'sapm commands' commands "$@"
}
(( $+functions[_sapm__help_commands] )) ||
_sapm__help_commands() {
    local commands; commands=(
'info:Get information about the specified package' \
'install:Install the specified package(s)' \
'list:List all of the installed packages' \
'search:Search for the specified package' \
'uninstall:Uninstall the specified package(s)' \
'update:Update all packages' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'sapm help commands' commands "$@"
}
(( $+functions[_sapm__help__help_commands] )) ||
_sapm__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'sapm help help commands' commands "$@"
}
(( $+functions[_sapm__help__info_commands] )) ||
_sapm__help__info_commands() {
    local commands; commands=()
    _describe -t commands 'sapm help info commands' commands "$@"
}
(( $+functions[_sapm__help__install_commands] )) ||
_sapm__help__install_commands() {
    local commands; commands=()
    _describe -t commands 'sapm help install commands' commands "$@"
}
(( $+functions[_sapm__help__list_commands] )) ||
_sapm__help__list_commands() {
    local commands; commands=()
    _describe -t commands 'sapm help list commands' commands "$@"
}
(( $+functions[_sapm__help__search_commands] )) ||
_sapm__help__search_commands() {
    local commands; commands=()
    _describe -t commands 'sapm help search commands' commands "$@"
}
(( $+functions[_sapm__help__uninstall_commands] )) ||
_sapm__help__uninstall_commands() {
    local commands; commands=()
    _describe -t commands 'sapm help uninstall commands' commands "$@"
}
(( $+functions[_sapm__help__update_commands] )) ||
_sapm__help__update_commands() {
    local commands; commands=()
    _describe -t commands 'sapm help update commands' commands "$@"
}
(( $+functions[_sapm__info_commands] )) ||
_sapm__info_commands() {
    local commands; commands=()
    _describe -t commands 'sapm info commands' commands "$@"
}
(( $+functions[_sapm__install_commands] )) ||
_sapm__install_commands() {
    local commands; commands=()
    _describe -t commands 'sapm install commands' commands "$@"
}
(( $+functions[_sapm__list_commands] )) ||
_sapm__list_commands() {
    local commands; commands=()
    _describe -t commands 'sapm list commands' commands "$@"
}
(( $+functions[_sapm__search_commands] )) ||
_sapm__search_commands() {
    local commands; commands=()
    _describe -t commands 'sapm search commands' commands "$@"
}
(( $+functions[_sapm__uninstall_commands] )) ||
_sapm__uninstall_commands() {
    local commands; commands=()
    _describe -t commands 'sapm uninstall commands' commands "$@"
}
(( $+functions[_sapm__update_commands] )) ||
_sapm__update_commands() {
    local commands; commands=()
    _describe -t commands 'sapm update commands' commands "$@"
}

if [ "$funcstack[1]" = "_sapm" ]; then
    _sapm "$@"
else
    compdef _sapm sapm
fi
